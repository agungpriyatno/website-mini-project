// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Customer {
  id        String   @id @default(cuid())
  name      String
  domicile  String
  gender    String
  sales     Sale[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("customers")
}

model Sale {
  id         String @id @default(cuid())
  customerId String @map("customer_id")

  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  totalPrice BigInt   @map("total_price")

  customer Customer    @relation(fields: [customerId], references: [id], onDelete: Cascade)
  items    SalesItem[]

  @@map("sales")
}

model Item {
  code      String   @id
  name      String
  price     BigInt
  category  String?  @map("category_code")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  sales SalesItem[]

  @@map("items")
}

model SalesItem {
  saleId     String @map("sale_id")
  itemCode   String @map("item_id")
  quantity   Int
  totalPrice BigInt @map("total_price")
  sale       Sale   @relation(fields: [saleId], references: [id], onDelete: Cascade)
  item       Item   @relation(fields: [itemCode], references: [code], onDelete: Cascade)

  @@id([saleId, itemCode])
  @@map("sales_items")
}
